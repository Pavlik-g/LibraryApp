// version 1.0 release

// const { dialog } = require("electron");

class Message {
    constructor(buttons, head, body, {activate = null, cancel = -1, type = "notice"} ){
        this.buttons  = buttons; // –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
        this.head     = head; // –ó–∞–≥–æ–ª–æ–≤–æ–∫
        this.body     = body; // –û–ø–∏—Å–∞–Ω–∏–µ
        this.type     = type; // –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        this.activate = activate; // –ö–Ω–æ–ø–∫–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
        this.cancel   = cancel; // –ò–Ω–¥–µ–∫—Å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è


    
    }

    class_create(){ // –°–æ–∑–¥–∞—ë–º –∫–ª–∞—Å—Å –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        let full_class = "mes-";

        if (this.type == "conf")        {full_class += "confirmation";}
        else if (this.type == "notice") {full_class += "notice";}
        else                            {full_class += this.type;}

        return full_class;
    }

    add_listeners(){
        if (this.activate) { // activate - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å css —Å–µ–ª–µ–∫—Ç–æ—Ä –Ω–∞ —ç–ª–µ–º–µ–Ω—Ç
            document.querySelector(this.activate).addEventListener("click", () => this.show_message());
        }

        if (this.cancel != -1) {    // close - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–Ω–¥–µ–∫—Å –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ
            this.link_buttons[this.cancel].addEventListener("click", () => this.close_message());
        }

        this.link_close.addEventListener("click", () => this.close_message()); // –ó–∞–∫—Ä—ã—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –∫—Ä–µ—Å—Ç–∏–∫–∞
    }

    create_message(){ // –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É

        // –ò—â–µ–º —Ç–µ–≥ <messages>
        let space = document.querySelector("messages");

        if (!space){
            space = document.createElement("messages");
            document.body.append(space);
        }
        console.log(space);

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–∞—à dialog
        let dialog = document.createElement("dialog");
        dialog.className = `message ${this.class_create()}`;

        let inner = '';
        
        if (this.head){ // –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫
            inner += `<h3 class="modal-header">${this.head}</h3>`;
        }
        if (this.body){ // –ï—Å–ª–∏ –µ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ
            inner += `<div class="modal-body">${this.body}</div>`;
        }
        if (this.buttons){ // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏
            inner += `<footer class="modal-footer">`;
            for (let x = 0; x < this.buttons.length; x++) {
                inner += `<button type="button">${this.buttons[x]}</button>`;   
            }
            inner += `</footer>`;
        }
        inner += `<button class="modal-close" type="button" tabindex="-1">&times;</button>`; // –∫—Ä–µ—Å—Ç–∏–∫


        dialog.innerHTML = inner;
        space.append(dialog);
        
        this.dialog = dialog;
        this.add_listeners();

        return dialog;

    }

    show_message(){ // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.dialog.showModal();
    }

    close_message(){ // –ó–∞–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.dialog.close();
    }

    // –ì–µ—Ç—Ç–µ—Ä—ã

    get link_buttons(){
        return this.dialog.querySelectorAll(".modal-footer button");
    }
    get link_close(){
        return this.dialog.querySelector(".modal-close");
    }
    get link_head(){
        return this.dialog.querySelector(".modal-header");
    }
    get link_body(){
        return this.dialog.querySelector(".modal-body");
    }
    get self(){
        return this.dialog;
    }

    // –°–µ—Ç—Ç–µ—Ä—ã


    set set_head(value){
        this.head = value;
        this.link_head.innerHTML = value;
    }

    set set_body(value){
        this.body = value;
        this.link_body.innerHTML = value;
    }
}



function message_ready() {

    // mes_del = new Message(["–£–¥–∞–ª–∏—Ç—å", "–û—Ç–º–µ–Ω–∏—Ç—å"], "–£–¥–∞–ª–µ–Ω–∏–µ", "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å?", {activate: "#del", cancel: 1, type: "conf"});
    // console.log(mes_del);
    // mes_del.create_message();

    // let button_list = document.querySelectorAll("[message]")
    // let button_class_list = []
    // for (let x = 0; x < button_list.length; x++) {
    //     button_class_list.push(new But_message(button_list[x]))
    // }
    // but_del = document.querySelector('#del')
    // dil = document.querySelector('#demo-modal')
    // but_del.addEventListener("click", () => dil.showModal())
    // dil.showModal()
}

document.addEventListener("DOMContentLoaded", message_ready);

// –ö–æ–¥ Djacon
function success(url, msg) { // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –∫–Ω–æ–ø–∫–µ –∏ –∑–∞–º–µ–Ω—è–µ—Ç —Ç–µ–∫—Å—Ç
    document.querySelector('#result').innerHTML = msg;
    document.querySelector('#cancel').setAttribute('href', url);
}

function error(msg) { // –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—É–¥–µ—Ç –±—ã—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω –æ–∫–Ω–∞ –æ—à–∏–±–∫–∏
    document.querySelector('#result').innerHTML = msg;
}

function sendErr() {
    document.body.innerHTML = `<a class="but" id="home" href="index.html"></a>
                                <a class="but" id="back" onclick="history.back()"></a>
                                <h1>–£–ø—Å, –≤–∞—Å –∑–¥–µ—Å—å –±—ã—Ç—å –Ω–µ –¥–æ–ª–∂–Ω–æ üò±!</h1>
                                <h2 align=center>–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É</h2>`;
}